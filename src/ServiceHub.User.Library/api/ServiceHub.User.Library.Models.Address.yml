### YamlMime:ManagedReference
items:
- uid: ServiceHub.User.Library.Models.Address
  commentId: T:ServiceHub.User.Library.Models.Address
  id: Address
  parent: ServiceHub.User.Library.Models
  children:
  - ServiceHub.User.Library.Models.Address.Address1
  - ServiceHub.User.Library.Models.Address.Address2
  - ServiceHub.User.Library.Models.Address.AddressId
  - ServiceHub.User.Library.Models.Address.City
  - ServiceHub.User.Library.Models.Address.Country
  - ServiceHub.User.Library.Models.Address.PostalCode
  - ServiceHub.User.Library.Models.Address.State
  - ServiceHub.User.Library.Models.Address.Validate
  - ServiceHub.User.Library.Models.Address.ValidateAmericanPostalCode
  - ServiceHub.User.Library.Models.Address.ValidateAmericanState
  - ServiceHub.User.Library.Models.Address.ValidateCountry
  langs:
  - csharp
  - vb
  name: Address
  nameWithType: Address
  fullName: ServiceHub.User.Library.Models.Address
  type: Class
  source:
    id: Address
    path: C:\Users\Austin\Documents\Revature\servicehub-user\src\ServiceHub.User.Library\Models\Address.cs
    startLine: 12
  assemblies:
  - ServiceHub.User.Library
  namespace: ServiceHub.User.Library.Models
  summary: "\nStores data for an address model.\n"
  remarks: "\nAn Address refers to the street, City, and apartment number of a room.\n"
  example: []
  syntax:
    content: public class Address
    content.vb: Public Class Address
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: ServiceHub.User.Library.Models.Address.AddressId
  commentId: P:ServiceHub.User.Library.Models.Address.AddressId
  id: AddressId
  parent: ServiceHub.User.Library.Models.Address
  langs:
  - csharp
  - vb
  name: AddressId
  nameWithType: Address.AddressId
  fullName: ServiceHub.User.Library.Models.Address.AddressId
  type: Property
  source:
    id: AddressId
    path: C:\Users\Austin\Documents\Revature\servicehub-user\src\ServiceHub.User.Library\Models\Address.cs
    startLine: 15
  assemblies:
  - ServiceHub.User.Library
  namespace: ServiceHub.User.Library.Models
  example: []
  syntax:
    content: public Guid AddressId { get; set; }
    parameters: []
    return:
      type: System.Guid
      description: 'The unique ID of an address. '
    content.vb: Public Property AddressId As Guid
  overload: ServiceHub.User.Library.Models.Address.AddressId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ServiceHub.User.Library.Models.Address.Address1
  commentId: P:ServiceHub.User.Library.Models.Address.Address1
  id: Address1
  parent: ServiceHub.User.Library.Models.Address
  langs:
  - csharp
  - vb
  name: Address1
  nameWithType: Address.Address1
  fullName: ServiceHub.User.Library.Models.Address.Address1
  type: Property
  source:
    id: Address1
    path: C:\Users\Austin\Documents\Revature\servicehub-user\src\ServiceHub.User.Library\Models\Address.cs
    startLine: 17
  assemblies:
  - ServiceHub.User.Library
  namespace: ServiceHub.User.Library.Models
  example: []
  syntax:
    content: public string Address1 { get; set; }
    parameters: []
    return:
      type: System.String
      description: 'The first street and apartment number. '
    content.vb: Public Property Address1 As String
  overload: ServiceHub.User.Library.Models.Address.Address1*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ServiceHub.User.Library.Models.Address.Address2
  commentId: P:ServiceHub.User.Library.Models.Address.Address2
  id: Address2
  parent: ServiceHub.User.Library.Models.Address
  langs:
  - csharp
  - vb
  name: Address2
  nameWithType: Address.Address2
  fullName: ServiceHub.User.Library.Models.Address.Address2
  type: Property
  source:
    id: Address2
    path: C:\Users\Austin\Documents\Revature\servicehub-user\src\ServiceHub.User.Library\Models\Address.cs
    startLine: 19
  assemblies:
  - ServiceHub.User.Library
  namespace: ServiceHub.User.Library.Models
  example: []
  syntax:
    content: public string Address2 { get; set; }
    parameters: []
    return:
      type: System.String
      description: 'The second street and apartment number. '
    content.vb: Public Property Address2 As String
  overload: ServiceHub.User.Library.Models.Address.Address2*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ServiceHub.User.Library.Models.Address.City
  commentId: P:ServiceHub.User.Library.Models.Address.City
  id: City
  parent: ServiceHub.User.Library.Models.Address
  langs:
  - csharp
  - vb
  name: City
  nameWithType: Address.City
  fullName: ServiceHub.User.Library.Models.Address.City
  type: Property
  source:
    id: City
    path: C:\Users\Austin\Documents\Revature\servicehub-user\src\ServiceHub.User.Library\Models\Address.cs
    startLine: 21
  assemblies:
  - ServiceHub.User.Library
  namespace: ServiceHub.User.Library.Models
  example: []
  syntax:
    content: public string City { get; set; }
    parameters: []
    return:
      type: System.String
      description: 'The city. '
    content.vb: Public Property City As String
  overload: ServiceHub.User.Library.Models.Address.City*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ServiceHub.User.Library.Models.Address.State
  commentId: P:ServiceHub.User.Library.Models.Address.State
  id: State
  parent: ServiceHub.User.Library.Models.Address
  langs:
  - csharp
  - vb
  name: State
  nameWithType: Address.State
  fullName: ServiceHub.User.Library.Models.Address.State
  type: Property
  source:
    id: State
    path: C:\Users\Austin\Documents\Revature\servicehub-user\src\ServiceHub.User.Library\Models\Address.cs
    startLine: 23
  assemblies:
  - ServiceHub.User.Library
  namespace: ServiceHub.User.Library.Models
  example: []
  syntax:
    content: public string State { get; set; }
    parameters: []
    return:
      type: System.String
      description: 'The state. '
    content.vb: Public Property State As String
  overload: ServiceHub.User.Library.Models.Address.State*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ServiceHub.User.Library.Models.Address.PostalCode
  commentId: P:ServiceHub.User.Library.Models.Address.PostalCode
  id: PostalCode
  parent: ServiceHub.User.Library.Models.Address
  langs:
  - csharp
  - vb
  name: PostalCode
  nameWithType: Address.PostalCode
  fullName: ServiceHub.User.Library.Models.Address.PostalCode
  type: Property
  source:
    id: PostalCode
    path: C:\Users\Austin\Documents\Revature\servicehub-user\src\ServiceHub.User.Library\Models\Address.cs
    startLine: 25
  assemblies:
  - ServiceHub.User.Library
  namespace: ServiceHub.User.Library.Models
  example: []
  syntax:
    content: public string PostalCode { get; set; }
    parameters: []
    return:
      type: System.String
      description: 'The zip code.. '
    content.vb: Public Property PostalCode As String
  overload: ServiceHub.User.Library.Models.Address.PostalCode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ServiceHub.User.Library.Models.Address.Country
  commentId: P:ServiceHub.User.Library.Models.Address.Country
  id: Country
  parent: ServiceHub.User.Library.Models.Address
  langs:
  - csharp
  - vb
  name: Country
  nameWithType: Address.Country
  fullName: ServiceHub.User.Library.Models.Address.Country
  type: Property
  source:
    id: Country
    path: C:\Users\Austin\Documents\Revature\servicehub-user\src\ServiceHub.User.Library\Models\Address.cs
    startLine: 27
  assemblies:
  - ServiceHub.User.Library
  namespace: ServiceHub.User.Library.Models
  example: []
  syntax:
    content: public string Country { get; set; }
    parameters: []
    return:
      type: System.String
      description: 'The country. '
    content.vb: Public Property Country As String
  overload: ServiceHub.User.Library.Models.Address.Country*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ServiceHub.User.Library.Models.Address.Validate
  commentId: M:ServiceHub.User.Library.Models.Address.Validate
  id: Validate
  parent: ServiceHub.User.Library.Models.Address
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: Address.Validate()
  fullName: ServiceHub.User.Library.Models.Address.Validate()
  type: Method
  source:
    id: Validate
    path: C:\Users\Austin\Documents\Revature\servicehub-user\src\ServiceHub.User.Library\Models\Address.cs
    startLine: 41
  assemblies:
  - ServiceHub.User.Library
  namespace: ServiceHub.User.Library.Models
  summary: "\nCheck whether the address is valid.\n"
  remarks: "\nAddressId, Address1, City, State, PostalCode and Country are all required.\nAddress2 is not required but cannot be an empty string.\nIf the country is the United States, postal codes must follow the\n5-digit convention (with or without the 4-digit extension code).\nCountry must follow the ISO Alpha-2 country code format, \ne.g. US for United States and GB for United Kingdom.\n"
  example: []
  syntax:
    content: public bool Validate()
    return:
      type: System.Boolean
      description: True if the address is valid and false otherwise
    content.vb: Public Function Validate As Boolean
  overload: ServiceHub.User.Library.Models.Address.Validate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ServiceHub.User.Library.Models.Address.ValidateCountry
  commentId: M:ServiceHub.User.Library.Models.Address.ValidateCountry
  id: ValidateCountry
  parent: ServiceHub.User.Library.Models.Address
  langs:
  - csharp
  - vb
  name: ValidateCountry()
  nameWithType: Address.ValidateCountry()
  fullName: ServiceHub.User.Library.Models.Address.ValidateCountry()
  type: Method
  source:
    id: ValidateCountry
    path: C:\Users\Austin\Documents\Revature\servicehub-user\src\ServiceHub.User.Library\Models\Address.cs
    startLine: 65
  assemblies:
  - ServiceHub.User.Library
  namespace: ServiceHub.User.Library.Models
  summary: "\nCheck whether Country is a valid ISO Alpha-2 country code.\n"
  remarks: "\nTry to construct a RegionInfo object with the Country string.\nIf RegionInfo constructor throws ArgumentException,\nthen Country is not a valid ISO Alpha-2 country code.\nThus Country is invalid. If no exception is thrown, Country is valid.\n"
  example: []
  syntax:
    content: public bool ValidateCountry()
    return:
      type: System.Boolean
      description: True if Country is valid, and false otherwise
    content.vb: Public Function ValidateCountry As Boolean
  overload: ServiceHub.User.Library.Models.Address.ValidateCountry*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ServiceHub.User.Library.Models.Address.ValidateAmericanState
  commentId: M:ServiceHub.User.Library.Models.Address.ValidateAmericanState
  id: ValidateAmericanState
  parent: ServiceHub.User.Library.Models.Address
  langs:
  - csharp
  - vb
  name: ValidateAmericanState()
  nameWithType: Address.ValidateAmericanState()
  fullName: ServiceHub.User.Library.Models.Address.ValidateAmericanState()
  type: Method
  source:
    id: ValidateAmericanState
    path: C:\Users\Austin\Documents\Revature\servicehub-user\src\ServiceHub.User.Library\Models\Address.cs
    startLine: 78
  assemblies:
  - ServiceHub.User.Library
  namespace: ServiceHub.User.Library.Models
  summary: "\nCheck whether the string is one of the valid 2-digit American\nState or territory codes. If so, it is valid, otherwise invalid.\n"
  example: []
  syntax:
    content: public bool ValidateAmericanState()
    return:
      type: System.Boolean
      description: True if the state code is valid, and false otherwise.
    content.vb: Public Function ValidateAmericanState As Boolean
  overload: ServiceHub.User.Library.Models.Address.ValidateAmericanState*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ServiceHub.User.Library.Models.Address.ValidateAmericanPostalCode
  commentId: M:ServiceHub.User.Library.Models.Address.ValidateAmericanPostalCode
  id: ValidateAmericanPostalCode
  parent: ServiceHub.User.Library.Models.Address
  langs:
  - csharp
  - vb
  name: ValidateAmericanPostalCode()
  nameWithType: Address.ValidateAmericanPostalCode()
  fullName: ServiceHub.User.Library.Models.Address.ValidateAmericanPostalCode()
  type: Method
  source:
    id: ValidateAmericanPostalCode
    path: C:\Users\Austin\Documents\Revature\servicehub-user\src\ServiceHub.User.Library\Models\Address.cs
    startLine: 153
  assemblies:
  - ServiceHub.User.Library
  namespace: ServiceHub.User.Library.Models
  summary: "\nCheck whether the postal code is in the 5-digit ZIP or the ZIP+4\npostal code format for American postal codes. \nIf it is, then it is valid. Otherwise it is invalid.\n"
  example: []
  syntax:
    content: public bool ValidateAmericanPostalCode()
    return:
      type: System.Boolean
      description: True if postal code is in a valid format and false otherwise.
    content.vb: Public Function ValidateAmericanPostalCode As Boolean
  overload: ServiceHub.User.Library.Models.Address.ValidateAmericanPostalCode*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: ServiceHub.User.Library.Models
  commentId: N:ServiceHub.User.Library.Models
  name: ServiceHub.User.Library.Models
  nameWithType: ServiceHub.User.Library.Models
  fullName: ServiceHub.User.Library.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: ServiceHub.User.Library.Models.Address.AddressId*
  commentId: Overload:ServiceHub.User.Library.Models.Address.AddressId
  name: AddressId
  nameWithType: Address.AddressId
  fullName: ServiceHub.User.Library.Models.Address.AddressId
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: ServiceHub.User.Library.Models.Address.Address1*
  commentId: Overload:ServiceHub.User.Library.Models.Address.Address1
  name: Address1
  nameWithType: Address.Address1
  fullName: ServiceHub.User.Library.Models.Address.Address1
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: ServiceHub.User.Library.Models.Address.Address2*
  commentId: Overload:ServiceHub.User.Library.Models.Address.Address2
  name: Address2
  nameWithType: Address.Address2
  fullName: ServiceHub.User.Library.Models.Address.Address2
- uid: ServiceHub.User.Library.Models.Address.City*
  commentId: Overload:ServiceHub.User.Library.Models.Address.City
  name: City
  nameWithType: Address.City
  fullName: ServiceHub.User.Library.Models.Address.City
- uid: ServiceHub.User.Library.Models.Address.State*
  commentId: Overload:ServiceHub.User.Library.Models.Address.State
  name: State
  nameWithType: Address.State
  fullName: ServiceHub.User.Library.Models.Address.State
- uid: ServiceHub.User.Library.Models.Address.PostalCode*
  commentId: Overload:ServiceHub.User.Library.Models.Address.PostalCode
  name: PostalCode
  nameWithType: Address.PostalCode
  fullName: ServiceHub.User.Library.Models.Address.PostalCode
- uid: ServiceHub.User.Library.Models.Address.Country*
  commentId: Overload:ServiceHub.User.Library.Models.Address.Country
  name: Country
  nameWithType: Address.Country
  fullName: ServiceHub.User.Library.Models.Address.Country
- uid: ServiceHub.User.Library.Models.Address.Validate*
  commentId: Overload:ServiceHub.User.Library.Models.Address.Validate
  name: Validate
  nameWithType: Address.Validate
  fullName: ServiceHub.User.Library.Models.Address.Validate
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: ServiceHub.User.Library.Models.Address.ValidateCountry*
  commentId: Overload:ServiceHub.User.Library.Models.Address.ValidateCountry
  name: ValidateCountry
  nameWithType: Address.ValidateCountry
  fullName: ServiceHub.User.Library.Models.Address.ValidateCountry
- uid: ServiceHub.User.Library.Models.Address.ValidateAmericanState*
  commentId: Overload:ServiceHub.User.Library.Models.Address.ValidateAmericanState
  name: ValidateAmericanState
  nameWithType: Address.ValidateAmericanState
  fullName: ServiceHub.User.Library.Models.Address.ValidateAmericanState
- uid: ServiceHub.User.Library.Models.Address.ValidateAmericanPostalCode*
  commentId: Overload:ServiceHub.User.Library.Models.Address.ValidateAmericanPostalCode
  name: ValidateAmericanPostalCode
  nameWithType: Address.ValidateAmericanPostalCode
  fullName: ServiceHub.User.Library.Models.Address.ValidateAmericanPostalCode
